<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--        June 16 2021 - Add "Allow to handle UPDATE messages from TFS  -->
<!--        June 22 2021 - Add "transport" to other messages. Add references  -->
<!--        Jul 11 2021 - handle conf via "-d" option  -->
<!--                 Sipp default 'uac' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic Sipstone UAC">
  <!-- In client mode (sipp placing calls), the Call-ID MUST be         -->
  <!-- generated by sipp. To do so, use [call_id] keyword.                -->
  <send retrans="500">
    <![CDATA[

      INVITE sip:[field0]@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      Allow: INVITE,ACK,CANCEL,BYE,OPTIONS,INFO,PRACK,UPDATE,SUBSCRIBE,NOTIFY,MESSAGE,REGISTER,REFER
      From: sipp <sip:[field1]@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: [field0] <sip:[field0]@[remote_ip]:[remote_port]>
      Call-ID: [call_id]
      CSeq: 1 INVITE
      Contact: <sip:[field1]@[local_ip]:[local_port];transport=[transport]>
      Max-Forwards: 70
      Subject: Performance Test
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [auto_media_port] RTP/AVP 0
      a=rtpmap:0 PCMU/8000

    ]]>
  </send>

  <recv response="100" optional="true">
  </recv>

  <recv response="180" optional="true">
  </recv>

  <recv response="182" optional="true">
  </recv>

  <recv response="183" optional="true">
  </recv>

  <!-- By adding rrs="true" (Record Route Sets), the route sets         -->
  <!-- are saved and used for following messages sent. Useful to test   -->
  <!-- against stateful SIP proxies/B2BUAs.                             -->
  <recv response="200" rtd="true" rrs="true">
  </recv>

  <!-- Packet lost can be simulated in any send/recv message by         -->
  <!-- by adding the 'lost = "10"'. Value can be [1-100] percent.       -->
  <send>
    <![CDATA[

      ACK [next_url] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:[field1]@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: [field0] <sip:[field0]@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 1 ACK
      [routes]
      Contact: <sip:[field1]@[local_ip]:[local_port];transport=[transport]>
      Max-Forwards: 70
      Subject: Performance Test
      Content-Length: 0

    ]]>
  </send>
<!-- <nop>
  <action>
       <exec play_pcap_audio="/root/MEGA_TRAFFIC/SIPP/Media2min.pcap"/>
<   </action>
< </nop>
<!--
<!-- <nop>
    <action>
      <exec rtp_stream="/home/craft/sipp-3.3.990/pcap/cust_2.wav" />
    </action>
  </nop>
-->

 <!-- INVITE received when Agent is connected. Keep timeout slightly more than the the duration expected in queue time. -->
 <!-- For caller surplus, timeout here is the total time of the queue and the talk time. -->

  <recv request="INVITE" timeout="900000" ontimeout="4" rtd="true" rrs="true">
  </recv>

  <send retrans="500">
   <![CDATA[
    SIP/2.0 200 OK
    Allow: INVITE,ACK,CANCEL,BYE,OPTIONS,INFO,PRACK,UPDATE,SUBSCRIBE,NOTIFY,MESSAGE,REGISTER,REFER
    [last_Via:]
    [last_From:]
    [last_To:]
    [last_Call-ID]
    [last_CSeq:]
    Contact: <sip:[field1]@[local_ip]:[local_port];transport=[transport]>
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
    s=-
    c=IN IP[media_ip_type] [media_ip]
    t=0 0
    m=audio [auto_media_port] RTP/AVP 0 101
    a=rtpmap:8 PCMA/8000
    a=rtpmap:101 telephone-event/8000
    a=fmtp:101 0-15
    a=ptime:20
    a=sendrecv
   ]]>
  </send>
  <recv request="ACK" crlf="true">
  </recv>

  <!-- INVITE received when agent 1 initiates transfer or conf. Keep timeout slightly greater  than agent1 to and cust talk duration i.e trans_leg1_time in ListenDLG. Here in ListenDLG trans_leg1_time=30sec-->

  <recv request="INVITE" timeout="40000" ontimeout="2" rtd="true" rrs="true">
  </recv>

  <send retrans="500">
   <![CDATA[
    SIP/2.0 200 OK
    Allow: INVITE,ACK,CANCEL,BYE,OPTIONS,INFO,PRACK,UPDATE,SUBSCRIBE,NOTIFY,MESSAGE,REGISTER,REFER
    [last_Via:]
    [last_From:]
    [last_To:]
    [last_Call-ID]
    [last_CSeq:]
    Contact: sip:[field1]@[local_ip]:[local_port]
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
    s=-
    c=IN IP[media_ip_type] [media_ip]
    t=0 0
    m=audio [auto_media_port] RTP/AVP 0 101
    a=rtpmap:8 PCMA/8000
    a=rtpmap:101 telephone-event/8000
    a=fmtp:101 0-15
    a=ptime:20
    a=sendrecv
   ]]>
  </send>

  <recv request="ACK" crlf="true">
  </recv>

  <!-- INVITE received when agent1 completes the transfer. For conf, receive UPDATE here. Keep timeout slightly more than the agent1 and agent2 consulation time. Here in ListenDLG trans_leg2_time=30sec -->

  <recv request="INVITE" timeout="40000" ontimeout="2" rtd="true" rrs="true">
  </recv>

  <send retrans="500">
   <![CDATA[
    SIP/2.0 200 OK
    Allow: INVITE,ACK,CANCEL,BYE,OPTIONS,INFO,PRACK,UPDATE,SUBSCRIBE,NOTIFY,MESSAGE,REGISTER,REFER
    [last_Via:]
    [last_From:]
    [last_To:]
    [last_Call-ID]
    [last_CSeq:]
    Contact: sip:[field1]@[local_ip]:[local_port]
    Content-Type: application/sdp
    Content-Length: [len]

    v=0
    o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
    s=-
    c=IN IP[media_ip_type] [media_ip]
    t=0 0
    m=audio [auto_media_port] RTP/AVP 0 101
    a=rtpmap:8 PCMA/8000
    a=rtpmap:101 telephone-event/8000
    a=fmtp:101 0-15
    a=ptime:20
    a=sendrecv
   ]]>
  </send>


  <recv request="ACK" crlf="true">
  </recv>

  <!-- This delay can be customized by the -d command-line option       -->
  <!-- or by adding a 'milliseconds = "value"' option here.             -->

  <!-- The 'crlf' option inserts a blank line in the statistics report. -->

   <label id="2"/>

   <pause/>

   <label id="1"/>

  <!-- Allow 2s to receive BYE if any from far end. -->

   <recv request="BYE" timeout="2000" ontimeout="4" rtd="true" rrs="true"> </recv>

  <send next="5">
       <![CDATA[
      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Length: 0
    ]]>
  </send>

  <label id="4"/>

  <send retrans="500">
    <![CDATA[

      BYE [next_url] SIP/2.0
      [routes]
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:[field1]@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: [field0] <sip:[field0]@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 2 BYE
      Contact: <sip:[field1]@[local_ip]:[local_port];transport=[transport]>
      Max-Forwards: 70
      Subject: Performance Test
      Content-Length: 0

    ]]>
  </send>

  <recv response="200" crlf="true">
  </recv>

  <label id="5"/>
  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>